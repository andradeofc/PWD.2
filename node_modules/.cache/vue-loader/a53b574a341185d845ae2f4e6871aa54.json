{"remainingRequest":"C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\src\\views\\home\\Index.vue?vue&type=template&id=5e7337c8&scoped=true&","dependencies":[{"path":"C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\src\\views\\home\\Index.vue","mtime":1576635979236},{"path":"C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Andrade\\Documents\\ProjetoDevWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}